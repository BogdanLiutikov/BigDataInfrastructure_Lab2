pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS=credentials('credentials-lab2-docker')
        DB_CREDS=credentials('credentials-lab2-db')
        LC_ALL = "en_US.UTF-8"
        LANG    = "en_US.UTF-8"
        LANGUAGE = "en_US.UTF-8"
    }

options {
        timestamps()
        skipDefaultCheckout(true)
	}
    stages {
        stage('Clone github repository') {
            steps {
                cleanWs()
                bat 'chcp 65001 && git clone -b main https://github.com/BogdanLiutikov/BigDataInfrastructure_Lab2'
				}
			}

        stage('Checkout repo dir') {
            steps {
                bat 'chcp 65001 && cd BigDataInfrastructure_Lab2 && dir'
				}
			}

        stage('Login'){
            steps{
                bat 'chcp 65001 && docker login -u %DOCKERHUB_CREDS_USR% -p %DOCKERHUB_CREDS_PSW%'
                }
            }

        stage('Create and run docker container') {
            steps {
                script {
                    def composeTemplate = readFile('compose.yaml.j2')
                    def renderedContent = composeTemplate.replaceAll('\\{\\{ command \\}\\}', 'bash -c "python -m src.preprocess && python -m src.train && python -m src.predict -m RandomForestClassifier -t smoke && coverage run -m src.unit_tests.test_preprocess && coverage run -m -a src.unit_tests.test_training && coverage report -m"')
                    writeFile file: 'compose.yaml', text: renderedContent
                    try {
                        bat 'chcp 65001 && cd BigDataInfrastructure_Lab2 && docker compose build'
                        }

                    finally {
                    bat '''
                        chcp 65001
                        cd BigDataInfrastructure_Lab2
                        echo MSSQL_USER=\"%DB_CREDS_USR%\" > .env
                        echo MSSQL_SA_PASSWORD=\"%DB_CREDS_PSW%\" >> .env
                        docker compose up -d
                        '''
                        }
				    }
                }
            }

        stage('Checkout coverage report'){
            steps{
                dir("BigDataInfrastructure_Lab2"){
                    bat '''
                    docker compose logs -t --tail 10
                    '''
                }
            }
        }

        stage('Push'){
            steps{
                bat 'chcp 65001 && docker push bogdanliutikov/lab2:latest'
            }
        }
	}

    post {
        always {
            bat 'docker compose down'
            bat 'chcp 65001 && docker logout'
        }
    }
}