pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS=credentials('credentials-lab2-docker')
        DB_CREDS=credentials('credentials-lab2-db')
        LC_ALL = "en_US.UTF-8"
        LANG    = "en_US.UTF-8"
        LANGUAGE = "en_US.UTF-8"
    }
    

options {
        timestamps()
        skipDefaultCheckout(true)
	}
    stages {

        stage('Login'){
            steps{
                bat 'docker login -u %DOCKERHUB_CREDS_USR% -p %DOCKERHUB_CREDS_PSW%'
                }
            }

        stage('Pull image'){
            steps{
                bat '''
                        docker pull bogdanliutikov/lab2:latest
                '''
            }
        }

        stage('Run container'){
            steps{
                bat 'curl https://raw.githubusercontent.com/BogdanLiutikov/BigDataInfrastructure_Lab2/main/compose.yaml.j2 -o compose.yaml.j2'
                script {
                    def composeTemplate = readFile('compose.yaml.j2')
                    def renderedContent = composeTemplate.replaceAll('\\{\\{ command \\}\\}', 'python -m src.server')
                    writeFile file: 'compose.yaml', text: renderedContent
                }
                
                bat '''
                        chcp 65001
                        echo MSSQL_USER=\"%DB_CREDS_USR%\" > .env
                        echo MSSQL_SA_PASSWORD=\"%DB_CREDS_PSW%\" >> .env
                        docker compose up -d
                '''
            }
        }

        stage('Run functional tests'){
            steps{  
                bat '''
                        docker compose exec web python -m src.func_test.api_test
                '''
            }
        }
	}

    post {
        always {
            bat 'docker compose down'
            bat 'docker logout'
        }
    }
}